#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Nov  7 09:50:18 2020

Runs the coral reef vulnerability analysis. This identifies reefs in the regions of interest, extracts carbonate chemistry time series for each reef
then ranks them base on the coefficient of varion for each carbonate parameter, calculates a final vulnerability score, and creates summary plots.

@author: tom holding
"""

from string import Template;
from os import path;
from os_reef_vulnerability.reef_timeseries import calculate_all_reef_metrics;
from os_reef_vulnerability.reef_process import extract_vulnerable_reefs;


#settings is the global settings dictionary from osoda_global_settings.py::get_default_settings() (or a custom global settings dictionary)
def main(settings, useDistanceToLandMask=False):
    #Process and filter reefs based on region and land mask.
    #Extract DIC time series for each reef.
    #Calculate summary statistics for all reefs.
    reefBaseDataPath = settings["reefLocationsDataPath"];
    carbonateDataTemplate = settings["longGriddedTimeSeriesPathTemplate"];
    reefIndividualOutputsPathTemplate = Template(path.join(settings["outputPathRoot"], "reef_outputs", "individual_reefs", "individual_${REGION}/reef_${REEFID}.csv")); #Reef time series DIC data for individual reefs
    reefSummaryOutputsPathTemplate = Template(path.join(settings["outputPathRoot"], "reef_outputs", "all_reef_${SUMMARYVAR}_summary_metrics.csv")); #Reef summary statistic data
    calculate_all_reef_metrics(reefBaseDataPath, carbonateDataTemplate, reefIndividualOutputsPathTemplate, reefSummaryOutputsPathTemplate, useDistanceToLandMask=useDistanceToLandMask);

    #Apply threshold to coefficient of variance to select vulnerable reefs
    vulnerableReefsListOutputPath = path.join(settings["outputPathRoot"], "reef_outputs", "vulnerable_reef_list.csv");
    extract_vulnerable_reefs(reefIndividualOutputsPathTemplate, reefSummaryOutputsPathTemplate, vulnerableReefsListOutputPath);


if __name__ == "__main__":
    print("Running with default settings");
    import osoda_global_settings;
    settings = osoda_global_settings.get_default_settings();
    
    main(settings);